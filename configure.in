
############################################
# initialize autoconf
############################################

AC_INIT

# prevent unwanted '-g -O2' flags
if test "x$CFLAGS" = "x" ; then
   CFLAGS=""
fi

############################################
# find a C++ compiler
############################################

AC_PROG_CXX

############################################
# find an archiver
############################################

AC_PATH_PROG(AR, ar)

if test "x$AR" = "x:"; then
    AC_MSG_ERROR(could not find the library archiver)
fi

AC_PROG_RANLIB

if test "x$RANLIB" != "x:"; then
    ARCHIVE="$AR cr"
else
    ARCHIVE="$AR crs"
fi

AC_SUBST(ARCHIVE)

############################################
# find unistd.h and sysconf()
############################################
        
AC_CHECK_HEADER(
	unistd.h,
	,
	AC_MSG_ERROR(could not find <unistd.h>))
	
AC_CHECK_FUNCS(
	sysconf,
	,
	AC_MSG_ERROR(could not find sysconf()))
	
############################################
# find sys/times.h and times()
############################################
        
AC_CHECK_HEADER(
	sys/times.h,
	,
	AC_MSG_ERROR(could not find <sys/times.h>))
	
AC_CHECK_FUNCS(
	times,
	,
	AC_MSG_ERROR(could not find times()))

############################################
# math
############################################

LIBS="-lm $LIBS"
        

if test `uname` = "Darwin"; then
    ############################################
    # Darwin -- set libs manually
    ############################################

    LIBS="$LIBS -framework AGL -framework OpenGL -framework Carbon"
    CPPFLAGS="$CPPFLAGS -I/opt/local/include"
    CFLAGS="$CFLAGS -I/opt/local/include"
    LDFLAGS="$LDFLAGS -L/opt/local/lib"
else
    ############################################
    # find X
    ############################################

    AC_PATH_XTRA
    LIBS="$X_PRE_LIBS -lX11 $X_EXTRA_LIBS $LIBS"
    CFLAGS="$CFLAGS $X_CFLAGS"
    LDFLAGS="$X_LIBS $LDFLAGS"

    ############################################
    # find Xft
    ############################################

    AC_CHECK_LIB(
        Xft,
        XftFontOpen)

    ############################################
    # find Xinerama
    ############################################

    AC_CHECK_LIB(
        Xinerama,
        XineramaIsActive)

    ############################################
    # find GL
    ############################################

    AC_CHECK_HEADER(
        GL/gl.h,
        ,
        AC_MSG_ERROR(could not find GL/gl.h))

    AC_CHECK_LIB(
        GL,
        glBegin,
        ,
        AC_MSG_ERROR(could not find GL library))

    ############################################
    # find GLU
    ############################################

    AC_CHECK_HEADER(
        GL/glu.h,
        ,
        AC_MSG_ERROR(could not find GL/glu.h))
	
    AC_CHECK_LIB(
        GLU,
        gluPerspective,
        ,
        AC_MSG_ERROR(could not find GLU library))
fi

############################################
# find fltk
############################################

AC_LANG(C++)

AC_CHECK_HEADER(
	FL/Fl.H,
	,
	AC_MSG_ERROR(could not find fltk headers))

AC_CHECK_LIB(
	fltk,
	fl_numericsort,
	,
	AC_MSG_ERROR(could not find fltk library))

LIBS="-lfltk_gl $LIBS"

AC_LANG(C)

############################################
# optimizations
############################################

OPTIMIZE=""

if test -n "$GXX"; then
   OPTIMIZE="-O3 -ffast-math -fomit-frame-pointer -DNDEBUG $OPTIMIZE"
else
   OPTIMIZE="-O2 $OPTIMIZE"
fi

AC_SUBST(OPTIMIZE)

############################################
# write output
############################################

AC_CONFIG_FILES([Makefile.defs])
AC_OUTPUT

