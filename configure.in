############################################
# initialize autoconf
############################################

AC_INIT

# prevent unwanted '-g -O2' flags
if test "x$CFLAGS" = "x" ; then
   CFLAGS=""
fi

############################################
# find fltk-config
############################################

AC_PATH_PROG(FLTK_CONFIG, fltk-config)

if test "x$FLTK_CONFIG" = "x"; then
    AC_MSG_ERROR(could not find fltk-config in your path)
fi

############################################
# GNU make
############################################

AC_PATH_PROG(MAKE, make)
case "`${MAKE} --version`" in
"GNU"* ) : ;;
* ) AC_MSG_ERROR([GNU Make is required]) ;;
esac

############################################
# find an archiver
############################################

AC_PATH_PROG(AR, ar)

if test "x$AR" = "x"; then
    AC_MSG_ERROR(could not find the library archiver)
fi

AC_PROG_RANLIB

if test "x$RANLIB" = "x:"; then
    ARCHIVE="$AR crs"
else
    ARCHIVE="$AR cr"
fi

AC_SUBST(ARCHIVE)

############################################
# find unistd.h and sysconf()
############################################

AC_CHECK_HEADER(
	unistd.h,
	,
	AC_MSG_ERROR(could not find <unistd.h>))

AC_CHECK_FUNCS(
	sysconf,
	,
	AC_MSG_ERROR(could not find sysconf()))

############################################
# find sys/times.h and times()
############################################

AC_CHECK_HEADER(
	sys/times.h,
	,
	AC_MSG_ERROR(could not find <sys/times.h>))

AC_CHECK_FUNCS(
	times,
	,
	AC_MSG_ERROR(could not find times()))

############################################
# optimizations
############################################

OPTIMIZE=""

if test `fltk-config --cxx` = "g++"; then
   OPTIMIZE="-O3 -ffast-math -fomit-frame-pointer -DNDEBUG $OPTIMIZE"
else
   OPTIMIZE="-O2 $OPTIMIZE"
fi

AC_SUBST(OPTIMIZE)

############################################
# write output
############################################

AC_CONFIG_FILES([Makefile.defs])
AC_OUTPUT
